<!--
    divire

    Copyright (C) 2020 Aru Nanika

    This program is released under the MIT License.
    https://opensource.org/licenses/MIT
-->

<UserControl x:Class="divire.Controls.ColorSelector"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ctrl="clr-namespace:divire.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="36" d:DesignWidth="82">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Themes/Theme.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="{StaticResource divireGlyphs}"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Foreground" Value="{StaticResource ThemeGlyphRegularBrushKey}"/>
            </Style>
            
            <Style TargetType="{x:Type ctrl:NumericTextBox}">
                <Setter Property="FontFamily" Value="{StaticResource divireGlyphs}"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="TextAlignment" Value="Right"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="{TemplateBinding Background}"
                               Height="{TemplateBinding Height}"
                               Width="{TemplateBinding Width}"
                               />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
                <Grid>
                    <Rectangle x:Name="thumbExtention" Fill="Transparent"
                               IsHitTestVisible="True"
                               />
                    <Grid Margin="4,0,4,0"
                          HorizontalAlignment="Center"
                          UseLayoutRounding="True"
                          VerticalAlignment="Center"
                          >
                        <Path x:Name="grip"
                              Data="M 0,0 H 5 V 24 H 0 Z"
                              Fill="{StaticResource ThemeGrayBrush04Key}"
                              Stretch="Fill"
                              SnapsToDevicePixels="True"
                              StrokeThickness="1"
                              Stroke="{StaticResource ThemeGlyphRegularBrushKey}"
                              UseLayoutRounding="True"
                              VerticalAlignment="Center"
                              />
                    </Grid>
                </Grid>
                

                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsDragging" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="White"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style TargetType="{x:Type Slider}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Grid>
                                <Track x:Name="PART_Track">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}"
                                                      Style="{StaticResource RepeatButtonTransparent}"
                                                      />
                                    </Track.DecreaseRepeatButton>

                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}"
                                                      Style="{StaticResource RepeatButtonTransparent}"
                                                      />
                                    </Track.IncreaseRepeatButton>

                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb"
                                               Focusable="False"
                                               Height="24"
                                               OverridesDefaultStyle="True"
                                               Template="{StaticResource SliderThumbHorizontalDefault}"
                                               VerticalAlignment="Center"
                                               Width="13"
                                               />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid Name="controlGrid">
        <Border Margin="3,0,3,0"
                BorderThickness="1"
                BorderBrush="{StaticResource ThemeGlyphRegularBrushKey}"
                Background="Transparent"
                >
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsEnabled, ElementName=controlGrid}" Value="False">
                            <Setter Property="Opacity" Value="0.2"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
           
            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="True"/>
                                    <Condition Binding="{Binding Path=IsOpen, ElementName=controlPopup}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="{StaticResource ThemeGlyphRegularBrushKey}"/>
                            </MultiDataTrigger>
                            
                            <DataTrigger  Binding="{Binding Path=IsOpen, ElementName=controlPopup}" Value="True">
                                <Setter Property="Background" Value="{StaticResource ThemeGlyphRegularBrushKey}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                
                <Button Name="controlButton"
                        Margin="2"
                        BorderThickness="0"
                        Click="Button_Click"
                        Background="{Binding ColorValue, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource colorNameConverter}}"
                        >
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter  Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="border"
                                                Background="{TemplateBinding Background}"
                                                SnapsToDevicePixels="True"
                                                >
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsOpen, ElementName=controlPopup}" Value="True">
                                    <Setter Property="IsHitTestVisible" Value="False"/>
                                </DataTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0"/>
                                </Trigger>
                                
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    
                </Button>
            </Grid>
        </Border>

        <Popup Name="controlPopup"
               PlacementTarget="{Binding ElementName=controlGrid}"
               StaysOpen="False"
               Placement="Left"
               IsOpen="{Binding IsOpen, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
               >
            <Grid Height="168"
                  Width="312"
                  Background="{StaticResource ThemeGrayBrush02Key}"
                  >
                <Grid Margin="8,10,10,10"
                      Background="{StaticResource ThemeGrayBrush03Key}"
                      >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="6"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="32"/>
                        <ColumnDefinition Width="44"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="8"/>
                    </Grid.ColumnDefinitions>
                    
                    <TextBlock Grid.Row="1"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               VerticalAlignment="Center"
                               Margin="8,0,0,3"
                               Text="H :"
                               />

                    <Grid Grid.Row="1"
                          Grid.Column="1"
                          Margin="0,4,4,8"
                          Background="{StaticResource ThemeGlyphRegularBrushKey}"
                          >
                        <ctrl:NumericTextBox x:Name="HueTextBox"
                                             Margin="0,4,2,0"
                                             Min="0"
                                             Max="360"
                                             Value="{Binding HueDisplay, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             />
                    </Grid>
                    
                    <Grid Grid.Row="1"
                          Grid.Column="3"
                          Margin="6,8,6,13"
                          >
                        <Grid.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="#FF8787" Offset="0" />
                                <GradientStop Color="#87FF87" Offset="0.333333" />
                                <GradientStop Color="#8787FF" Offset="0.666666" />
                                <GradientStop Color="#FF8787" Offset="1" />
                            </LinearGradientBrush>
                        </Grid.Background>
                    </Grid>

                    <Slider Grid.Row="1"
                            Grid.Column="3"
                            Margin="0,-4,0,0"
                            Minimum="0"
                            Maximum="360"
                            Value="{Binding RealHue, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            />
                    
                    <TextBlock Grid.Row="2"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               VerticalAlignment="Center"
                               Margin="8,0,0,3"
                               Text="S :"
                               />

                    <Grid Grid.Row="2"
                          Grid.Column="1"
                          Margin="0,4,4,8"
                          Background="{StaticResource ThemeGlyphRegularBrushKey}"
                          >
                        <ctrl:NumericTextBox x:Name="SaturationTextBox"
                                             Margin="0,4,2,0"
                                             Min="0"
                                             Max="100"
                                             Value="{Binding SaturationDisplay, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             />
                    </Grid>

                    <Grid Grid.Row="2"
                          Grid.Column="3"
                          Margin="6,8,6,13"
                          >
                        <Grid.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="#CCCCCC" Offset="0.0" />
                                <GradientStop Color="{Binding SaturationMaxColor, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource colorNameConverter}}" Offset="1.0" />
                            </LinearGradientBrush>
                        </Grid.Background>
                    </Grid>

                    <Slider Grid.Row="2"
                            Grid.Column="3"
                            Margin="0,-4,0,0"
                            Minimum="0"
                            Maximum="100"
                            Value="{Binding RealSaturation, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            />

                    <TextBlock Grid.Row="3"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               VerticalAlignment="Center"
                               Margin="8,0,0,3"
                               Text="V :"
                               />

                    <Grid Grid.Row="3"
                          Grid.Column="1"
                          Margin="0,4,4,8"
                          Background="{StaticResource ThemeGlyphRegularBrushKey}"
                          >
                        <ctrl:NumericTextBox x:Name="BrightnessTextBox"
                                             Margin="0,4,2,0"
                                             Min="0"
                                             Max="100"
                                             Value="{Binding BrightnessDisplay, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             />
                    </Grid>

                    <Grid Grid.Row="3"
                          Grid.Column="3"
                          Margin="6,8,6,13"
                          >
                        <Grid.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="Black" Offset="0.0" />
                                <GradientStop Color="White" Offset="1.0" />
                            </LinearGradientBrush>
                        </Grid.Background>
                    </Grid>

                    <Slider Grid.Row="3"
                            Grid.Column="3"
                            Margin="0,-4,0,0"
                            Minimum="0"
                            Maximum="100"
                            Value="{Binding RealBrightness, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            />
                    
                    <TextBlock Grid.Row="4"
                               Grid.Column="0"
                               Grid.ColumnSpan="5"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Right"
                               Margin="92,0"
                               Text="RGB (Hex) :"
                               />

                    <Grid Grid.Row="4"
                          Grid.ColumnSpan="5"
                          Margin="0,4,14,8"
                          Width="72"
                          HorizontalAlignment="Right"
                          Background="{StaticResource ThemeGlyphRegularBrushKey}"
                          >
                        <ctrl:NumericTextBox x:Name="RgbTextBox"
                                             Margin="0,4,2,0"
                                             IsHexadecimal="True"
                                             Min="0"
                                             Max="16777215"
                                             ZerosPadding="6"
                                             Value="{Binding ColorValue, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             />
                    </Grid>
                </Grid>
            </Grid>
        </Popup>
    </Grid>
</UserControl>
